.. Autogenerated by Gollum RST generator (docs/generator/*.go)

File
====

The file producer writes messages to a file. This producer also allows log
rotation and compression of the rotated logs. Folders in the file path will
be created if necessary.

Each target file will handled with separated batch processing.




Parameters
----------

**File**

  This value contains the path to the log file to write. The wildcard character "*"
  can be used as a placeholder for the stream name.
  By default this parameter is set to "/var/log/gollum.log".
  
  

**FileOverwrite**

  This value enables files to be overwritten instead of appending new data
  to it.
  By default this parameter is set to "false".
  
  

**FolderPermissions** (default: 0755)

  This value accepts an octal number string that contains the unix file
  permissions used when creating a folder.
  By default this parameter is set to "0755".
  
  

**Permissions** (default: 0644)

  This value accepts an octal number string that contains the unix file
  permissions used when creating a file.
  By default this parameter is set to "0664".
  
  

Parameters (from file.Pruner)
-----------------------------

**Prune/AfterHours** (default: 0)

  (no documentation available)
  

**Prune/Count** (default: 0)

  (no documentation available)
  

**Prune/TotalSizeMB** (default: 0, unit: mb)

  (no documentation available)
  

Parameters (from components.BatchedWriterConfig)
------------------------------------------------

**Batch/FlushCount** (default: 4096)

  (no documentation available)
  

**Batch/FlushTimeoutSec** (default: 0, unit: sec)

  (no documentation available)
  

**Batch/MaxCount** (default: 8192)

  (no documentation available)
  

**Batch/TimeoutSec** (default: 5, unit: sec)

  (no documentation available)
  

Parameters (from DirectProducer)
--------------------------------

**Enable**

  switches the consumer on or off. By default this value is set to true.
  
  

**FallbackStream**

  defines the stream used for messages that are sent to the fallback after
  a timeout (see ChannelTimeoutMs). By default this is _DROPPED_.
  
  

**ID**

  allows this producer to be found by other plugins by name. By default this
  is set to "" which does not register this producer.
  
  

**Modulators**

  sets formatter and filter to use. Each formatter has its own set of options
  which can be set here, too. By default this is set to format.Forward.
  Each producer decides if and when to use a Formatter.
  
  

**ShutdownTimeoutMs**

  sets a timeout in milliseconds that will be used to detect
  a blocking producer during shutdown. By default this is set to 1 second.
  Decreasing this value may lead to lost messages during shutdown. Increasing
  this value will increase shutdown time.
  
  

**Streams**

  contains either a single string or a list of strings defining the
  message channels this producer will consume. By default this is set to "*"
  which means "listen to all routers but the internal".
  
  

Parameters (from components.RotateConfig)
-----------------------------------------

**Rotation/AtHour** (default: -1)

  (no documentation available)
  

**Rotation/AtMin** (default: -1)

  (no documentation available)
  

**Rotation/Compress** (default: false)

  (no documentation available)
  

**Rotation/Enable** (default: false)

  (no documentation available)
  

**Rotation/SizeMB** (default: 1024, unit: mb)

  (no documentation available)
  

**Rotation/TimeoutMin** (default: 1440, unit: min)

  (no documentation available)
  

**Rotation/Timestamp** (default: 2006-01-02_15)

  (no documentation available)
  

**Rotation/ZeroPadding** (default: 0)

  (no documentation available)
  

Examples
--------

.. code-block:: yaml

	This example will write the messages from all streams to `/tmp/gollum.log`
	after every 64 message or after 60sec:
	
	 fileOut:
	   Type: producer.File
	   Streams: "*"
	   File: /tmp/gollum.log
	   Batch:
			MaxCount: 128
	   	FlushCount: 64
	   	TimeoutSec: 60
	     FlushTimeoutSec: 3
	
	



.. Autogenerated by Gollum RST generator (docs/generator/*.go)

S3
==================================================================

This producer sends data to an AWS S3 Bucket.


Parameters
----------

**Region**
  Region defines the amazon region of your s3 bucket.
  By default this is set to "eu-west-1".

**Endpoint**
  Endpoint defines the amazon endpoint for your s3 bucket.
  By default this is set to "s3-eu-west-1.amazonaws.com".

**StorageClass**
  StorageClass defines the amazon s3 storage class for objects created, from http://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html By default this is set to "STANDARD".

**CredentialType**
  CredentialType defines the credentials that are to be used when connecting to s3.
  This can be one of the following: environment, static, shared, none.
  Static enables the parameters CredentialId, CredentialToken and CredentialSecret shared enables the parameters CredentialFile and CredentialProfile.
  None will not use any credentials and environment will pull the credentials from environmental settings.
  By default this is set to none.

**BatchMaxMessages**
  BatchMaxMessages defines the maximum number of messages to upload per batch.
  By default this is set to 5000.

**ObjectMaxMessages**
  ObjectMaxMessages defines the maximum number of messages to join into an s3 object.
  By default this is set to 5000.

**ObjectMessageDelimiter**
  ObjectMessageDelimiter defines the string to delimit messages within an s3 object.
  By default this is set to "\n".

**SendTimeframeMs**
  SendTimeframeMs defines the timeframe in milliseconds in which a second batch send can be triggered.
  By default this is set to 10000, i.e. ten upload operations per second per s3 path.

**BatchTimeoutSec**
  BatchTimeoutSec defines the number of seconds after which a batch is flushed automatically.
  By default this is set to 30.

**TimestampWrite**
  TimestampWrite defines the go timestamp format that will be used in naming objects.
  Objects are named <s3_path><timestamp><sha1>.
  By default timestamp is set to "2006-01-02T15:04:05".

**PathFormatter**
  PathFormatter can define a formatter that extracts the path suffix for an s3 object from the object data.
  By default this is uses the sha1 of the object.
  A good formatter for this can be format.Identifier.

**Compress**
  Compress defines whether to gzip compress the object before uploading.
  This adds a ".gz" extension to objects.
  By default this is set to false.

**LocalPath**
  LocalPath defines the local output directory for temporary object files.
  Files will be stored as "<path>/<number>".
  Compressed files will have a .gz extension.
  State will be stored in "<path>/state".
  By default this is not set, and objects will be built in memory.

**UploadOnShutdown**
  UploadOnShutdown defines whether to upload all temporary object files on shutdown.
  This has no effect if LocalPath is not set.
  By default this is false.

**FileMaxAgeSec**
  FileMaxAgeSec defines the maximum age of a local file before it is uploaded.
  This defaults to 3600 (1 hour).

**FileMaxMB**
  FileMaxMB defines the maximum size of a local file before it is uploaded.
  This limit is imposed before compression occurs.
  This defaults to 1000 (1 GB).

**StreamMapping**
  StreamMapping defines a translation from gollum stream to s3 bucket/path.
  If no mapping is given the gollum stream name is used as s3 bucket.
  Values are of the form bucket/path or bucket, s3:// prefix is not allowed.
  The full path of the object will be s3://<StreamMapping><Timestamp><PathFormat> where Timestamp is time the object is written formatted with TimestampWrite, and PathFormat is the output of PathFormatter when passed the object data.

Parameters (from BufferedProducer)
----------------------------------

**Enable**
  Enable switches the consumer on or off.
  By default this value is set to true.

**ID**
  ID allows this producer to be found by other plugins by name.
  By default this is set to "" which does not register this producer.

**Channel**
  Channel sets the size of the channel used to communicate messages.
  By default this value is set to 8192.

**ChannelTimeoutMs**
  ChannelTimeoutMs sets a timeout in milliseconds for messages to wait if this producer's queue is full.
  A timeout of -1 or lower will send the message the the fallback without notice.
  A timeout of 0 will block until the queue is free.
  This is the default.
  A timeout of 1 or higher will wait x milliseconds for the queues to become available again.
  If this does not happen, the message will be send to the retry channel.

**ShutdownTimeoutMs**
  ShutdownTimeoutMs sets a timeout in milliseconds that will be used to detect a blocking producer during shutdown.
  By default this is set to 1 second.
  Decreasing this value may lead to lost messages during shutdown.
  Increasing this value will increase shutdown time.

**Router**
  Router contains either a single string or a list of strings defining the message channels this producer will consume.
  By default this is set to "*" which means "listen to all routers but the internal".

**FallbackStream**
  FallbackStream defines the stream used for messages that are sent to the fallback after a timeout (see ChannelTimeoutMs).
  By default this is _DROPPED_.

**Formatter**
  Formatter sets a formatter to use.
  Each formatter has its own set of options which can be set here, too.
  By default this is set to format.Forward.
  Each producer decides if and when to use a Formatter.

**Filter**
  Filter sets a filter that is applied before formatting, i.e. before a message is send to the message queue.
  If a producer requires filtering after formatting it has to define a separate filter as the producer decides if and where to format.

Parameters (from SimpleProducer)
--------------------------------

**Enable**
  Enable switches the consumer on or off.
  By default this value is set to true.

**ID**
  ID allows this producer to be found by other plugins by name.
  By default this is set to "" which does not register this producer.

**Channel**
  Channel sets the size of the channel used to communicate messages.
  By default this value is set to 8192.

**ChannelTimeoutMs**
  ChannelTimeoutMs sets a timeout in milliseconds for messages to wait if this producer's queue is full.
  A timeout of -1 or lower will try the fallback route without notice.
  A timeout of 0 will block until the queue is free.
  This is the default.
  A timeout of 1 or higher will wait x milliseconds for the queues to become available again.
  If this does not happen, the message will be send to the retry channel.

**ShutdownTimeoutMs**
  ShutdownTimeoutMs sets a timeout in milliseconds that will be used to detect a blocking producer during shutdown.
  By default this is set to 1 second.
  Decreasing this value may lead to lost messages during shutdown.
  Increasing this value will increase shutdown time.

**Router**
  Router contains either a single string or a list of strings defining the message channels this producer will consume.
  By default this is set to "*" which means "listen to all routers but the internal".

**FallbackStream**
  FallbackStream defines the stream used for messages that cannot be delivered e.g. after a timeout (see ChannelTimeoutMs).
  By default this is "".

**Formatter**
  Formatter sets a formatter to use.
  Each formatter has its own set of options which can be set here, too.
  By default this is set to format.Forward.
  Each producer decides if and when to use a Formatter.

**Filter**
  Filter sets a filter that is applied before formatting, i.e. before a message is send to the message queue.
  If a producer requires filtering after formatting it has to define a separate filter as the producer decides if and where to format.

Example
-------

.. code-block:: yaml

	- "producer.S3":
	    Region: "eu-west-1"
	    Endpoint: "s3-eu-west-1.amazonaws.com"
	    StorageClass: "STANDARD"
	    CredentialType: "none"
	    CredentialId: ""
	    CredentialToken: ""
	    CredentialSecret: ""
	    CredentialFile: ""
	    CredentialProfile: ""
	    BatchMaxMessages: 5000
	    ObjectMaxMessages: 5000
	    ObjectMessageDelimiter: "\n"
	    SendTimeframeMs: 10000
	    BatchTimeoutSec: 30
	    TimestampWrite: "2006-01-02T15:04:05"
	    PathFormatter: ""
	    Compress: false
	    LocalPath: ""
	    UploadOnShutdown: false
	    FileMaxAgeSec: 3600
	    FileMaxMB: 1000
	    StreamMapping:
	        "*" : "bucket/path"


